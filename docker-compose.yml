version: '3.8'

services:
  db:
    container_name: database
    image: postgres:13-alpine
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - ./data:/var/lib/postgres/data/
    env_file: .env
    networks:
      serverless-challenge:
        ipv4_address: "192.168.128.3"

  api:
    container_name: api
    build:
      context: ./
      dockerfile: api-Dockerfile
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - ./api:/home/node/app/api
    # environment:
    #   - DATABASE_URL=postgres://user:password@postgres:5432/db
    depends_on:
      - db
    networks:
      serverless-challenge:
        ipv4_address: "192.168.128.2"

  web:
    container_name: frontend
    build:
      context: ./
      dockerfile: web-Dockerfile
    restart: always
    ports:
      - '8001:8001'
    environment:
      - NODE_ENV=development
      # - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/home/node/app/frontend
    networks:
      serverless-challenge:
        ipv4_address: "192.168.128.5"

  adminer:
    container_name: admin-database
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      serverless-challenge:
        ipv4_address: "192.168.128.4"

networks:
  serverless-challenge:
    ipam:
      driver: default
      config:
        - subnet: '192.168.128.0/20'
